<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
  <meta charset="UTF-8" />
  <title>Mava</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <!-- Bootstrap 5 RTL -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <meta property="og:title" content="Title of your page">
<meta property="og:description" content="Description of your page">
<meta property="og:image" content="URL of your image">
<meta property="og:url" content="URL of your page">

<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:title" content="Title of your page">
<meta name="twitter:description" content="Description of your page">
<meta name="twitter:image" content="URL of your image">

  <style>
    body {
      background-color: #fafafa;
      font-family: 'Arial', sans-serif;
      padding-bottom: 70px;
    }

    .navbar {
      background-color: white;
      border-bottom: 1px solid #ddd;
    }

    .navbar-brand {
      font-weight: bold;
    }

    .post-card {
      background: white;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin-bottom: 20px;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }

    .post-card img.post-image {
      width: 100%;
      height: auto;
      border-bottom: 1px solid #eee;
    }

    .post-header {
      display: flex;
      align-items: center;
      padding: 10px;
    }

    .post-header img {
      border-radius: 50%;
      width: 40px;
      height: 40px;
      object-fit: cover;
      margin-left: 10px;
    }

    .post-caption {
      padding: 10px;
      font-size: 14px;
      white-space: pre-wrap;
    }

    .post-actions {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 10px;
      font-size: 24px;
      user-select: none;
    }

    .post-actions .left-icons i,
    .post-actions .right-icons i {
      cursor: pointer;
      margin: 0 8px;
      transition: color 0.3s ease;
    }

    .post-actions .left-icons i:hover {
      color: #0d6efd;
    }

    .likes-count {
      padding: 0 10px 10px;
      font-weight: bold;
      font-size: 14px;
      cursor: default;
    }

    .comments-section {
      padding: 0 10px 10px;
      font-size: 13px;
      color: #555;
      max-height: 100px;
      overflow-y: auto;
    }

    .comments-section p {
      margin-bottom: 4px;
    }

    .add-comment {
      border-top: 1px solid #eee;
      padding: 5px 10px;
      display: flex;
      align-items: center;
    }

    .add-comment input {
      border: none;
      flex-grow: 1;
      padding: 8px;
      font-size: 14px;
      outline: none;
    }

    .add-comment button {
      border: none;
      background: transparent;
      color: #0d6efd;
      font-weight: bold;
      cursor: pointer;
      padding: 0 10px;
    }

    .bottom-nav {
      position: fixed;
      bottom: 0;
      width: 100%;
      background: white;
      border-top: 1px solid #ddd;
      display: flex;
      justify-content: space-around;
      padding: 10px 0;
      z-index: 1000;
    }

    .bottom-nav a {
      color: #333;
      text-decoration: none;
      text-align: center;
      font-size: 14px;
    }

    .bottom-nav a:hover {
      color: #0d6efd;
    }

    .btn-like, .btn-bookmark, .reaction-icon {
      transition: transform 0.2s ease;
    }

    .btn-like:active, .btn-bookmark:active, .reaction-icon:active {
      transform: scale(1.3);
    }
  </style>
</head>
<body>

  <!-- Navbar -->
  <form class="d-flex" action="/search" method="GET">
    <input class="form-control me-2" type="search" name="q" placeholder="Search for users or posts" aria-label="Search" required>
    <button class="btn btn-outline-success" type="submit">Search</button>
  </form>

  <nav class="navbar navbar-expand-lg navbar-light">
    <div class="container">
      <div class="d-flex align-items-center gap-3">
        <a href="/posts/new" class="btn btn-outline-primary btn-sm">➕ New Post</a>
        <% if (currentUser) { %>
          
        <% } else { %>
          <a href="/login" class="btn btn-outline-success btn-sm">Login</a>
        <% } %>
      </div>
    </div>
  </nav>

  <!-- Main content -->
  <div class="container mt-4">
    <% if (posts && posts.length > 0) { %>
      <% posts.forEach(post => { %>
        <div class="post-card" data-post-id="<%= post._id %>">
          <div class="post-header">
           <% if (post.user) { %>
  <a href="/users/<%= post.user._id %>">
    <img src="<%= post.user.avatar || '/default-avatar.png' %>" />
  </a>
  <strong><%= post.user.username %></strong>
<% } else { %>
  <a href="#">
    <img src="/default-avatar.png" />
  </a>
  <strong>مستخدم غير معروف</strong>
<% } %>

         <% if (post.user) { %>
  <a href="/users/<%= post.user._id %>">
    <img src="<%= post.user.avatar || '/default-avatar.png' %>" />
  </a>
  <strong><%= post.user.username %></strong>
<% } else { %>
  <a href="#">
    <img src="/default-avatar.png" />
  </a>
  <strong>مستخدم غير معروف</strong>
<% } %>

          </div>

          <img class="post-image" src="<%= post.image %>" alt="Post Image" />

          <div class="post-actions">
            <div class="left-icons">
              <i class="bi <%= post.likes.includes(currentUser?._id) ? 'bi-heart-fill text-danger' : 'bi-heart' %> btn-like" title="Like" role="button"></i>
              <i class="bi bi-chat" title="Comment" role="button"></i>

              <% if (currentUser) { %>
                <i class="bi <%= currentUser.bookmarks.includes(post._id) ? 'bi-bookmark-fill text-primary' : 'bi-bookmark' %> btn-bookmark" data-post-id="<%= post._id %>"></i>
              <% } %>

              <div class="reaction-group">
                <i class="toggle-reactions bi bi-emoji-smile"></i>
                <div class="reactions-popup" style="display:none;">
                  <i class="bi bi-heart-fill reaction-icon" data-type="heart"></i>
                  <i class="bi bi-hand-thumbs-up-fill reaction-icon" data-type="clap"></i>
                  <i class="bi bi-emoji-frown-fill reaction-icon" data-type="sad"></i>
                </div>
              </div>
            </div>
          </div>

          <div class="likes-count">
            <%= post.likes.length %> Likes
          </div>

          <div class="post-caption">
            <strong><%= post.user.username %></strong> <%= post.caption %>
          </div>

         <div class="comments-section">
  <% post.comments.slice(0, 3).forEach(comment => { %>  <!-- عرض أول 3 تعليقات فقط -->
    <p><strong><%= comment.user.username %>:</strong> <%= comment.text %></p>
  <% }) %>

  <% if (post.comments.length > 3) { %>
    <button class="btn btn-link p-0 text-primary show-more-comments" data-post-id="<%= post._id %>">Show more comments</button>
  <% } %>
</div>



          <% if (currentUser) { %>
            <form class="add-comment" data-post-id="<%= post._id %>">
              <input type="text" name="comment" placeholder="Add a comment..." autocomplete="off" required />
              <button type="submit">Post</button>
            </form>
          <% } else { %>
            <p class="text-center text-muted">Log in to comment</p>
          <% } %>
        </div>
      <% }) %>
    <% } else { %>
      <p class="text-center text-muted">No posts yet.</p>
    <% } %>
  </div>

  <!-- Bottom nav -->
  <% if (currentUser) { %>
    <div class="bottom-nav d-lg-none">
      <a href="/"><i class="bi bi-house-door-fill"></i><br>Home</a>
      <a href="/posts/new"><i class="bi bi-plus-square-fill"></i><br>New</a>
      <a href="/users/<%= currentUser._id %>"><i class="bi bi-person-circle"></i><br>My Account</a>
    </div>
  <% } %>

  <!-- Bootstrap Script -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    // Like button handler
    document.querySelectorAll('.btn-like').forEach(button => {
      button.addEventListener('click', async () => {
        const postCard = button.closest('.post-card');
        const postId = postCard.dataset.postId;

        try {
          const res = await fetch(`/posts/like/${postId}`, { method: 'POST' });
          const data = await res.json();

          if (data.liked) {
            button.classList.add('bi-heart-fill', 'text-danger');
            button.classList.remove('bi-heart');
          } else {
            button.classList.remove('bi-heart-fill', 'text-danger');
            button.classList.add('bi-heart');
          }

          // Update like count
          postCard.querySelector('.likes-count').textContent = data.likesCount + ' Likes';
        } catch (error) {
          alert('Error while liking the post');
        }
      });
    });

    // Add comment handler
    document.querySelectorAll('.add-comment').forEach(form => {
      form.addEventListener('submit', async e => {
        e.preventDefault();
        const postId = form.dataset.postId;
        const input = form.querySelector('input[name="comment"]');
        const text = input.value.trim();

        if (!text) return;

        try {
          const res = await fetch(`/posts/comment/${postId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ text })
          });

          const comments = await res.json();

          // Update comments (display last 3 comments)
          const commentsSection = form.parentElement.querySelector('.comments-section');
          commentsSection.innerHTML = '';

          comments.slice(-3).forEach(comment => {
            commentsSection.innerHTML += `<p><strong>${comment.user.username}:</strong> ${comment.text}</p>`;
          });
          if (comments.length > 3) {
            commentsSection.innerHTML += '<small>Show more comments...</small>';
          }

          input.value = '';
        } catch (error) {
          alert('Error while adding comment');
        }
      });
    });

    // Example for saving post (bookmark)
    document.querySelectorAll('.btn-bookmark').forEach(button => {
      button.addEventListener('click', async () => {
        const postId = button.dataset.postId;

        try {
          const res = await fetch(`/posts/bookmark/${postId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
          });

          const data = await res.json();

          if (data.bookmarked) {
            button.classList.remove('bi-bookmark');
            button.classList.add('bi-bookmark-fill', 'text-primary');
          } else {
            button.classList.remove('bi-bookmark-fill', 'text-primary');
            button.classList.add('bi-bookmark');
          }
        } catch (err) {
          console.error('Bookmark error:', err);
          alert('Error while saving');
        }
      });
    });
    
    // Handling reactions
    document.querySelectorAll('.toggle-reactions').forEach(btn => {
      btn.addEventListener('mouseover', () => btn.nextElementSibling.style.display = 'flex');
      btn.nextElementSibling.addEventListener('mouseleave', e => e.currentTarget.style.display = 'none');
    });
    document.querySelectorAll('.reaction-icon').forEach(icon => {
      icon.addEventListener('click', async () => {
        const postId = icon.closest('.post-card').dataset.postId;
        const type = icon.dataset.type;
        await fetch(`/posts/react/${postId}`, {
          method: 'POST',
          headers: {'Content-Type': 'application/json'},
          body: JSON.stringify({ type })
        });
        icon.closest('.reactions-popup').style.display = 'none';
      });
    });

    // Handling swipe actions
    document.querySelectorAll('.post-card').forEach(card => {
      let startX;
      card.addEventListener('touchstart', e => startX = e.touches[0].clientX);
      card.addEventListener('touchend', e => {
        const dx = e.changedTouches[0].clientX - startX;
        if (dx > 100) {
          card.querySelector('.btn-bookmark').click();
        } else if (dx < -100) {
          card.querySelector('.btn-like').click();
        }
      });
    });




    // التفاعل مع عرض المزيد من التعليقات
document.querySelectorAll('.show-more-comments').forEach(button => {
  button.addEventListener('click', async function() {
    const postId = button.getAttribute('data-post-id');

    // إخفاء "عرض المزيد" وعرض النص "عرض أقل"
    button.textContent = 'Show less comments';
    button.classList.add('show-less-comments');
    button.classList.remove('show-more-comments');

    try {
      // جلب التعليقات المتبقية من الخادم باستخدام AJAX
      const res = await fetch(`/posts/comments/${postId}?page=2`);
      const comments = await res.json();

      const commentsSection = button.closest('.comments-section');

      // إضافة التعليقات الجديدة إلى الصفحة
      comments.forEach(comment => {
        const commentElement = document.createElement('p');
        commentElement.innerHTML = `<strong>${comment.user.username}:</strong> ${comment.text}`;
        commentsSection.insertBefore(commentElement, button);
      });
    } catch (error) {
      console.error('Error fetching comments:', error);
    }
  });
});

// التفاعل مع عرض أقل من التعليقات
document.querySelectorAll('.show-less-comments').forEach(button => {
  button.addEventListener('click', function() {
    const postId = button.getAttribute('data-post-id');

    // إخفاء التعليقات الجديدة وإظهار النص "عرض المزيد"
    const commentsSection = button.closest('.comments-section');
    const allComments = commentsSection.querySelectorAll('p');
    const visibleComments = Array.from(allComments).slice(0, 3);

    // إخفاء التعليقات المتبقية
    for (let i = 3; i < allComments.length; i++) {
      allComments[i].style.display = 'none';
    }

    button.textContent = 'Show more comments';
    button.classList.add('show-more-comments');
    button.classList.remove('show-less-comments');

    // عرض التعليقات الأصلية (بداية من 3 فقط)
    visibleComments.forEach(comment => {
      comment.style.display = 'block';
    });
  });
});

  </script>
  <style>
    footer {
  background-color: #343a40;
  color: white;
  padding: 10px 0;
  text-align: center;
}

footer strong {
  color: #007bff;
}

  </style>
<footer>
  <p>Powered by <strong><a href="/contact">Basem Halaika</a></strong></p>
</footer>

</body>
</html>
